# Start with a base image containing Python 3.10 for ARM64
FROM python:3.10

# Set the working directory in the container
WORKDIR /app

# Add metadata to an image
LABEL maintainer="tony@zoght.com"

# Install OpenSSH server
RUN apt-get update && \
    apt-get install -y openssh-server && \
    rm -rf /var/lib/apt/lists/*

# Configure SSH for passwordless login
RUN mkdir /var/run/sshd && \
    echo 'root:your_password' | chpasswd && \
    sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
    
# Install Miniconda (architecture-agnostic)
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda && \
    rm Miniconda3-latest-Linux-x86_64.sh


# Add conda to path
ENV PATH="/opt/conda/bin:${PATH}"

# Verify conda is installed
RUN conda --version

# Copy the environment.yml file into the Docker image
COPY autozen.yml ./autozen.yml

# Create a new conda environment from the environment.yml file
RUN conda env create -f autozen.yml

# Get name of the environment
RUN echo "source activate $(head -1 autozen.yml | cut -d' ' -f2)" > ~/.bashrc
ENV PATH /opt/conda/envs/$(head -1 autozen.yml | cut -d' ' -f2)/bin:$PATH

# Install Jupyter and nb_conda_kernels in the base environment
RUN conda install -y jupyter nb_conda_kernels

# Make port 8888 available to the world outside this container
EXPOSE 8888
EXPOSE 22

# # When the container launches, start the Jupyter Notebook server
CMD ["jupyter", "notebook", "--ip='*'", "--port=8888", "--no-browser", "--allow-root"]

# When the container launches, start the SSH server and Jupyter Notebook server
#CMD /usr/sbin/sshd -D  & jupyter notebook --ip='*' --port=8888 --no-browser --allow-root
